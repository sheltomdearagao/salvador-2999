
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
import { corsHeaders } from "../_shared/cors.ts";

const OPENAI_API_KEY = Deno.env.get("OPENAI_API_KEY");
const OPENAI_API_URL = "https://api.openai.com/v1/chat/completions";

serve(async (req) => {
  // Habilitando CORS
  if (req.method === "OPTIONS") {
    return new Response("ok", { headers: corsHeaders });
  }
  
  try {
    console.log("üìù Recebendo requisi√ß√£o para avalia√ß√£o de miss√£o");
    const { missionPrompt, userResponse } = await req.json();
    
    // Verificar se os dados necess√°rios est√£o presentes
    if (!missionPrompt || !userResponse) {
      console.error("‚ùå Dados incompletos na requisi√ß√£o");
      return new Response(
        JSON.stringify({ 
          success: false, 
          error: "Dados incompletos. Por favor, forne√ßa o prompt da miss√£o e a resposta do usu√°rio." 
        }),
        { 
          headers: { ...corsHeaders, "Content-Type": "application/json" },
          status: 400 
        }
      );
    }

    // Verificar se a chave da API est√° configurada
    if (!OPENAI_API_KEY) {
      console.error("‚ùå Chave da API OpenAI n√£o encontrada nas vari√°veis de ambiente");
      return new Response(
        JSON.stringify({ 
          success: false, 
          error: "Chave da API OpenAI n√£o configurada no ambiente Supabase." 
        }),
        { 
          headers: { ...corsHeaders, "Content-Type": "application/json" },
          status: 500 
        }
      );
    }

    console.log("üîë Chave da API OpenAI encontrada, enviando requisi√ß√£o");
    // Enviar requisi√ß√£o para a API OpenAI
    const response = await fetch(OPENAI_API_URL, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${OPENAI_API_KEY}`,
      },
      body: JSON.stringify({
        model: "gpt-4o",
        messages: [
          {
            role: "system",
            content: `Voc√™ √© um avaliador especializado na Compet√™ncia V da reda√ß√£o do ENEM, que avalia propostas de interven√ß√£o. 
            
            Uma proposta de interven√ß√£o COMPLETA deve apresentar 5 elementos: 
            1. **A√ß√£o (O qu√™?)** - O que deve ser feito para solucionar ou mitigar o problema
            2. **Agente (Quem?)** - Quem ser√° o respons√°vel por executar a a√ß√£o proposta
            3. **Modo/Meio (Como?)** - De que maneira ou atrav√©s de qual recurso a a√ß√£o ser√° realizada
            4. **Efeito (Para qu√™?)** - Finalidade ou resultado esperado da a√ß√£o proposta
            5. **Detalhamento** - Informa√ß√£o adicional sobre algum dos elementos anteriores
            
            Analise a resposta do jogador e identifique quantos desses elementos est√£o presentes corretamente. 
            Avalie a proposta de interven√ß√£o em uma escala de 0 a 200. 
            Uma proposta com 5 elementos deve receber nota 200. 
            Uma proposta com 4 elementos deve receber nota 160.
            Uma proposta com 3 elementos deve receber nota 120.
            Uma proposta com 2 elementos deve receber nota 80.
            Uma proposta com 1 elementos deve receber nota 40.
            Uma proposta apenas com elementos inv√°lidos ou sem nenhum elemento deve receber nota 0
            Propostas qeu desrespeitem os direitos humanos devem receber zero e deve ser explicado o motivo da nota 0 por DDH (Desrespeito aos Direitos Humanos)
            
            IMPORTANTE: Formate sua resposta de forma clara e organizada, utilizando markdown para melhor legibilidade.
            
            ## Estrutura obrigat√≥ria da sua avalia√ß√£o:

            ### üìã An√°lise dos Elementos
            **Elementos encontrados:**
            - Lista cada elemento identificado com explica√ß√£o clara
            
            **Elementos ausentes:**
            - Lista elementos que faltam ou precisam de melhorias
            
            ### üìä Resultado da Avalia√ß√£o
            **Nota:** X/200
            **Elementos v√°lidos:** Y/5
            
            ### üí° Sugest√µes de Melhoria
            - Forne√ßa dicas espec√≠ficas e construtivas para aprimorar a proposta
            
            ### ‚úÖ Exemplo de Proposta Completa
            - Se a nota for baixa, ofere√ßa um exemplo pr√°tico de como incluir os elementos faltantes

            Considere como agente v√°lido todos os agentes indicados para executar uma determinada a√ß√£o.Exemplos: "governo federal", "governos estaduais", "governos municipais", "Minist√©rio da Educa√ß√£o", "Minist√©rio da Sa√∫de", "escolas", "professores", "fam√≠lia", "ONGs", "sociedade civil", "m√≠dia", "influenciadores digitais", "institui√ß√µes de ensino superior", "empresas privadas", "organiza√ß√µes internacionais", "plataformas digitais", "universidades", "comunidade escolar", "secretarias de educa√ß√£o", "profissionais da sa√∫de" N√£o s√£o v√°lidos agentes extremamante vagos, como "algu√©m" e "ningu√©m".
            Considere como a√ß√£o v√°lida todas as a√ß√µes, normalmente representadas por verbos e locu√ß√µes verbais, que expressem alguma medida a ser executada pelo agente. Exemplos de a√ß√µes v√°lidas: "cria√ß√£o de campanhas de conscientiza√ß√£o", "inclus√£o de temas nas diretrizes curriculares escolares", "oferta de cursos de capacita√ß√£o", "fiscaliza√ß√£o mais rigorosa por parte do Estado", "investimento em infraestrutura", "amplia√ß√£o do acesso a servi√ßos p√∫blicos", "parcerias entre setor p√∫blico e privado", "uso das redes sociais para difus√£o de informa√ß√£o", "promo√ß√£o de debates em ambientes educacionais", "cria√ß√£o de centros de acolhimento e apoio", "oferta de atendimento psicol√≥gico gratuito", "implementa√ß√£o de pol√≠ticas p√∫blicas espec√≠ficas", "cria√ß√£o de aplicativos educativos", "oferta de bolsas de estudo", "apoio a ONGs e projetos sociais". A√ß√µes inv√°lidas s√£o do tipo: "fazer alguma coisa", "resolver esse problema", "tomar alguma atitude". 
            Considere como modo/meio as express√µes que indicam a forma de realizar a a√ß√£o indicada. Normalmente esse elemento √© introduzido por express√µes como "atrav√©s de", "por meio de", "mediante", "por interm√©dio de". Exemplos de modo/meio v√°lidos: "por meio de campanhas publicit√°rias", "por interm√©dio de projetos educacionais", "por meio da cria√ß√£o de leis espec√≠ficas", "por meio da implementa√ß√£o de pol√≠ticas p√∫blicas", "atrav√©s da oferta de oficinas e palestras", "com a utiliza√ß√£o das redes sociais", "por meio da distribui√ß√£o de materiais informativos", "atrav√©s de parcerias com institui√ß√µes especializadas", "por meio da capacita√ß√£o de profissionais", "com o uso de plataformas digitais", "por meio da veicula√ß√£o de conte√∫dos educativos", "atrav√©s de a√ß√µes comunit√°rias", "por meio de editais de incentivo", "com a cria√ß√£o de centros de atendimento", "por meio da reformula√ß√£o curricular".
            Considere como finalidade elementos que indiquem os efeitos ou objetivos da a√ß√£o. Normalmente esse elemento √© introduzido por express√µes como "a fim de", "para", "com a finalidade de", "com o objetivo de", "o objetivo √©", "a finalidade √©". Exemplos: "com o objetivo de promover a conscientiza√ß√£o da popula√ß√£o", "a fim de reduzir os √≠ndices de desigualdade social", "com o intuito de garantir o acesso √† informa√ß√£o", "para assegurar a inclus√£o de grupos marginalizados", "a fim de combater a desinforma√ß√£o", "com o objetivo de estimular o pensamento cr√≠tico", "para fortalecer o papel da educa√ß√£o na sociedade", "com o intuito de prevenir comportamentos discriminat√≥rios", "a fim de ampliar o acesso a servi√ßos essenciais", "para garantir o pleno exerc√≠cio da cidadania", "com o objetivo de reduzir os impactos sociais do problema", "a fim de fomentar o respeito √† diversidade", "com o intuito de promover uma cultura de paz", "para assegurar a equidade de oportunidades", "a fim de formar uma sociedade mais justa e emp√°tica"
            Considere como detalhamento ideias que adicionam informa√ß√µes suplementares sobre algum dos outros elementos, como explica√ß√µes, compara√ß√µes, exemplifica√ß√µes, especifica√ß√µes, alguns apostos, mas n√£o ora√ß√µes adjetivas. O detalhamento da finalidade √© um elemento que se relaciona com o elemento finalidade atrav√©s de conectivos e indicam a consequ√™ncia ou o efeito da realiza√ß√£o do elemento finalidade. Esse detalhamento da finalidade √© conhecido como "efeito do efeito".
            `

            
          },
          {
            role: "user",
            content: `**Miss√£o:** ${missionPrompt}\n\n**Resposta do jogador:** ${userResponse}\n\nAvalie esta proposta de interven√ß√£o conforme os crit√©rios da Compet√™ncia V do ENEM.`
          }
        ],
        temperature: 0.2,
        max_tokens: 1000,
      }),
    });

    const data = await response.json();
    
    if (data.error) {
      console.error("‚ùå Erro na API OpenAI:", data.error.message);
      return new Response(
        JSON.stringify({ 
          success: false, 
          error: data.error.message || "Erro ao processar a avalia√ß√£o." 
        }),
        { 
          headers: { ...corsHeaders, "Content-Type": "application/json" },
          status: 500 
        }
      );
    }

    console.log("‚úÖ Avalia√ß√£o conclu√≠da com sucesso");
    const evaluation = data.choices[0].message.content;
    
    // Extrair pontua√ß√£o (procurar por diferentes formatos)
    const scoreMatch = evaluation.match(/(?:Nota|Score):\s*(\d+(?:\.\d+)?)(?:\/10)?/i);
    const score = scoreMatch ? parseFloat(scoreMatch[1]) : undefined;
    
    // Extrair contagem de elementos (procurar por diferentes formatos)
    const elementsMatch = evaluation.match(/(?:Elementos v√°lidos|Elementos):\s*(\d+)(?:\/5)?/i);
    const elementsCount = elementsMatch ? parseInt(elementsMatch[1]) : undefined;

    // Montando a resposta final
    const result = {
      success: true,
      evaluation,
      score,
      elementsCount
    };

    return new Response(
      JSON.stringify(result),
      { headers: { ...corsHeaders, "Content-Type": "application/json" } }
    );
  } catch (error) {
    console.error("‚ùå Erro na fun√ß√£o de avalia√ß√£o:", error);
    return new Response(
      JSON.stringify({ success: false, error: error.message || "Erro desconhecido." }),
      { 
        headers: { ...corsHeaders, "Content-Type": "application/json" },
        status: 500 
      }
    );
  }
});
